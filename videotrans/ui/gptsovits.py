# run again.  Do not edit this file unless you know what you are doing.
from PySide6 import QtWidgets, QtCore
from PySide6.QtCore import QMetaObject, QSize, Qt
from PySide6.QtWidgets import QLabel, QLineEdit, QPlainTextEdit, QPushButton, QSizePolicy, QHBoxLayout, QVBoxLayout, \
    QCheckBox

from videotrans.configure import config
from videotrans.util import tools


class Ui_gptsovitsform(object):
    def setupUi(self, gptsovitsform):
        self.has_done = False
        if not gptsovitsform.objectName():
            gptsovitsform.setObjectName("gptsovitsform")
        gptsovitsform.setWindowModality(Qt.NonModal)
        gptsovitsform.resize(800, 500)
        sizePolicy = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(gptsovitsform.sizePolicy().hasHeightForWidth())
        gptsovitsform.setSizePolicy(sizePolicy)
        gptsovitsform.setMaximumSize(QSize(800, 500))

        self.wrap_h = QHBoxLayout(gptsovitsform)
        self.wrap_h.setObjectName(u"wrap_h")
        self.inner_v = QVBoxLayout()

        h1 = QHBoxLayout()
        self.label = QLabel()
        self.label.setObjectName("label")
        self.label.setMinimumSize(QSize(0, 35))
        self.api_url = QLineEdit()
        self.api_url.setObjectName("api_url")
        self.api_url.setMinimumSize(QSize(0, 35))
        h1.addWidget(self.label)
        h1.addWidget(self.api_url)
        self.inner_v.addLayout(h1)

        h2 = QHBoxLayout()
        self.label_3 = QLabel()
        self.label_3.setObjectName("label_3")

        self.extra = QLineEdit()
        self.extra.setObjectName("extra")
        self.extra.setMinimumSize(QSize(0, 35))
        h2.addWidget(self.label_3)
        h2.addWidget(self.extra)
        self.inner_v.addLayout(h2)

        self.label_4 = QLabel()
        self.label_4.setObjectName("label_4")
        self.label_4.setMinimumSize(QSize(301, 16))
        self.label_4.setText('参考音频#音频文字内容#语言代码 (必须是wav音频，时长在3-10秒，否则报400错误)')

        self.role = QPlainTextEdit()
        self.role.setObjectName("role")
        self.role.setMinimumSize(QSize(771, 100))
        self.role.setReadOnly(False)
        self.inner_v.addWidget(self.label_4)
        self.inner_v.addWidget(self.role)

        h3 = QHBoxLayout()
        self.is_v2 = QCheckBox()
        self.is_v2.setText("api_v2?")
        self.is_v2.setToolTip("如果是api_v2.py,则必须选中")
        self.save = QPushButton()
        self.save.setObjectName("save")
        self.save.setMinimumSize(QSize(0, 35))
        h3.addWidget(self.is_v2)
        h3.addWidget(self.save)
        self.test = QPushButton()
        self.test.setObjectName("test")
        self.test.setMinimumSize(QSize(0, 35))
        help_btn = QtWidgets.QPushButton()
        help_btn.setMinimumSize(QtCore.QSize(0, 35))
        help_btn.setStyleSheet("background-color: rgba(255, 255, 255,0)")
        help_btn.setObjectName("help_btn")
        help_btn.setCursor(Qt.PointingHandCursor)
        help_btn.setText("查看填写教程" if config.defaulelang == 'zh' else "Fill out the tutorial")
        help_btn.clicked.connect(lambda: tools.open_url(url='https://pyvideotrans.com/gptsovits'))

        h3.addWidget(self.test)
        h3.addWidget(help_btn)
        self.inner_v.addLayout(h3)

        # end
        self.wrap_h.addLayout(self.inner_v)

        self.retranslateUi(gptsovitsform)

        QMetaObject.connectSlotsByName(gptsovitsform)

    # setupUi

    def retranslateUi(self, gptsovitsform):
        gptsovitsform.setWindowTitle("GPT-SoVITS API")
        self.label_3.setText("额外参数")
        self.role.setPlaceholderText(
            "在此填写参考音频信息,一行一组，音频必须是wav格式，时长必须在3-10秒之内，否则会报400错误\n音频放在GPT-SoVITS项目根目录下，在此填写带后缀wav名称\n填写示例格式如下\n\n123.wav#你好啊我的朋友#zh\n\n示例解释:123.wav 是wav格式的音频文件，放在GPT-SoVITS根下，时长在3-10秒内，中间文字是该音频对应文本，zh代表该文本语言代码")
        self.save.setText("保存" if config.defaulelang == 'zh' else "Save")
        self.api_url.setPlaceholderText("填写http开头的完整地址,GPT-SoVITS自带api默认 http://127.0.0.1:9880")
        self.label.setText("GPT-SoVITS API")
        self.extra.setPlaceholderText("填写通过extra键向api传递的额外参数，为空则传递pyvideotrans")
        self.test.setText("测试Api" if config.defaulelang == 'zh' else "Test API")
    # retranslateUi
