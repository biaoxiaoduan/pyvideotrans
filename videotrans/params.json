{"last_opendir": "/Users/duanyanbiao/Downloads/_video_out/testtesttest", "cuda": false, "paraformer_spk": true, "line_roles": {}, "only_video": false, "is_separate": false, "remove_noise": false, "target_dir": "", "source_language": "中文简", "target_language": "西班牙语", "subtitle_language": "chi", "translate_type": 1, "subtitle_type": 0, "listen_text_zh-cn": "你好啊，我亲爱的朋友，希望你的每一天都是美好愉快的！", "listen_text_zh-tw": "你好啊，我親愛的朋友，希望你的每一天都是美好愉快的！", "listen_text_en": "Hello, my dear friend. I hope your every day is beautiful and enjoyable!", "listen_text_fr": "Bonjour mon cher ami. J'espère que votre quotidien est beau et agréable !", "listen_text_de": "Hallo mein lieber Freund. Ich hoffe, dass Ihr Tag schön und angenehm ist!", "listen_text_ja": "こんにちは私の親愛なる友人。 あなたの毎日が美しく楽しいものでありますように！", "listen_text_ko": "안녕, 내 사랑하는 친구. 당신의 매일이 아름답고 즐겁기를 바랍니다!", "listen_text_ru": "Привет, мой дорогой друг. Желаю, чтобы каждый твой день был прекрасен и приятен!", "listen_text_es": "Hola mi querido amigo. ¡Espero que cada día sea hermoso y agradable!", "listen_text_th": "สวัสดีเพื่อนรัก. ฉันหวังว่าทุกวันของคุณจะสวยงามและสนุกสนาน!", "listen_text_it": "Ciao caro amico mio. Spero che ogni tuo giorno sia bello e divertente!", "listen_text_pt": "Olá meu querido amigo. Espero que todos os seus dias sejam lindos e agradáveis!", "listen_text_vi": "Xin chào người bạn thân yêu của tôi. Tôi hy vọng mỗi ngày của bạn đều đẹp và thú vị!", "listen_text_ar": "مرحبا صديقي العزيز. أتمنى أن يكون كل يوم جميلاً وممتعًا!", "listen_text_tr": "Merhaba sevgili arkadaşım. Umarım her gününüz güzel ve keyifli geçer!", "listen_text_hi": "नमस्ते मेरे प्यारे दोस्त। मुझे आशा है कि आपका हर दिन सुंदर और आनंददायक हो!!", "listen_text_hu": "Helló kedves barátom. Remélem minden napod szép és kellemes!", "listen_text_uk": "Привіт, мій дорогий друже, сподіваюся, ти щодня прекрасна!", "listen_text_id": "Halo, temanku, semoga kamu cantik setiap hari!", "listen_text_ms": "Helo, sahabat saya, saya harap anda cantik setiap hari!", "listen_text_kk": "Сәлеметсіз бе, менің қымбатты досым, сендер күн сайын әдемісің деп үміттенемін!", "listen_text_cs": "Ahoj, můj drahý příteli, doufám, že jsi každý den krásná!", "listen_text_pl": "Witam, mój drogi przyjacielu, mam nadzieję, że jesteś piękna każdego dnia!", "listen_text_nl": "Hallo mijn lieve vriend, ik hoop dat elke dag goed en fijn voor je is!!", "listen_text_sv": "Hej min kära vän, jag hoppas att varje dag är en bra och trevlig dag för dig!", "listen_text_he": "שלום, ידידי היקר, אני מקווה שכל יום בחייך יהיה נפלא ומאושר!", "listen_text_bn": "হ্যালো, আমার প্রিয় বন্ধু, আমি আশা করি আপনার জীবনের প্রতিটি দিন চমৎকার এবং সুখী হোক!", "listen_text_fil": "Hello, kaibigan ko", "listen_text_fa": "سلام دوستای گلم امیدوارم هر روز از زندگیتون عالی و شاد باشه.", "listen_text_ur": "ہیلو پیارے دوست، مجھے امید ہے کہ آپ آج خوش ہوں گے۔", "listen_text_yue": "你好啊親愛嘅朋友，希望你今日好開心", "tts_type": 0, "split_type": "all", "model_name": "paraformer-zh", "recogn_type": 2, "voice_autorate": false, "voice_role": "No", "voice_rate": "+0%", "video_autorate": true, "deepl_authkey": "", "deepl_api": "", "deepl_gid": "", "deeplx_address": "", "deeplx_key": "", "libre_address": "", "libre_key": "", "ott_address": "", "tencent_SecretId": "", "tencent_SecretKey": "", "tencent_termlist": "", "gcloud_credential_json": "", "gcloud_language_code": "", "gcloud_voice_name": "", "gcloud_audio_encoding": "", "gcloud_ssml_gender": "", "ali_id": "", "ali_key": "", "baidu_appid": "", "baidu_miyue": "", "chatgpt_api": "https://api.openai.com/v1", "chatgpt_key": "", "chatgpt_max_token": "4096", "chatgpt_model": "gpt-4o", "chatgpt_template": "# 任务：逐行翻译\n\n将 `<INPUT>` 内的文本逐行翻译成 **{lang}**。\n\n**核心规则：**\n1.  **行数绝对一致**：输入有几行，输出就必须有几行。即使句子被拆分，也要逐行翻译。\n2.  **保留无法翻译的内容**：代码、专有名词、路径等无法翻译的行，直接原样输出。\n3.  **指定格式**：所有输出必须用 `<TRANSLATE_TEXT>` 标签包裹。\n\n---\n### 格式示例\n以下示例仅用于展示必须遵守的**格式**和**规则**。\n**请忽略示例中的具体语言，你的翻译目标是本任务开头指定的语言。**\n\n#### 输入:\nThis is\na long sentence.\nconfig_path\n\n#### 输出:\n```xml\n<TRANSLATE_TEXT>\n这是\n一个长句子。\nconfig_path\n</TRANSLATE_TEXT>\n```\n---\n\n<INPUT></INPUT>\n", "chatgpt_temperature": "0.7", "chatgpt_top_p": "1.0", "claude_api": "", "claude_key": "", "claude_model": "claude-3-5-sonnet-latest", "claude_template": "", "azure_api": "", "azure_key": "", "azure_version": "2024-06-01", "azure_model": "gpt-4.1", "azure_template": "", "gemini_key": "", "gemini_model": "gemini-2.0-flash", "gemini_template": "", "gemini_ttsrole": "Zephyr,Puck,Charon,Kore,Fenrir,Leda,Orus,Aoede,Callirrhoe,Autonoe,Enceladus,Iapetus,Umbriel,Algieba,Despina,Erinome,Algenib,Rasalgethi,Laomedeia,Achernar,Alnilam,Schedar,Gacrux,Pulcherrima,Achird,Zubenelgenubi,Vindemiatrix,Sadachbia,Sadaltager,Sulafat", "gemini_ttsstyle": "", "gemini_ttsmodel": "gemini-2.5-flash-preview-tts", "gemini_srtprompt": "# 角色\n你是一个高度专一化的AI数据处理器。你的唯一功能是接收一批音频文件，并根据下述不可违背的规则，生成一个**单一、完整的XML报告**。你不是对话助手。\n\n# 不可违背的规则与输出格式\n你必须将本次请求中收到的所有音频文件作为一个整体进行分析，并严格遵循以下规则。**这些规则的优先级高于一切，尤其是规则 #1。**\n\n1.  **【最高优先级】严格的一对一映射**:\n    *   这是最重要的规则：我提供给你的**每一个音频文件**，在最终输出中**必须且只能对应一个 `<audio_text>` 标签**。\n    *   **无论单个音频文件有多长、包含多少停顿或句子**，你都**必须**将其所有转录内容**合并成一个单一的字符串**，并放入那唯一的 `<audio_text>` 标签中。\n    *   **绝对禁止**为同一个输入文件创建多个 `<audio_text>` 标签。\n\n2.  **【数据分析】说话人识别**:\n    *   分析所有音频，识别出不同的说话人。由同一个人说的所有片段，必须使用相同的、从0开始递增的ID（`[spk0]`, `[spk1]`...）。\n    *   对于无法识别说话人的音频（如噪音、音乐），统一使用ID `-1` (`[spk-1]`)。\n\n3.  **【内容与顺序】转录与排序**:\n    *   自动检测每个音频的语言并进行转录。若无法转录，将文本内容填充为空字符串。\n    *   最终XML中的 `<audio_text>` 标签顺序，必须严格等同于输入音频文件的顺序。\n\n# 输出格式强制性示例\n<!-- 你必须生成与下面结构完全一致的输出。注意：即使音频很长，其所有内容也必须合并在一个标签内。 -->\n```xml\n<result>\n    <audio_text>[spk0]这是第一个文件的转录结果。</audio_text>\n    <audio_text>[spk1]This is the transcription for the second file, it might be very long but all content must be in this single tag.</audio_text>\n    <audio_text>[spk0]这是第三个文件的转录结果，说话人与第一个文件相同。</audio_text>\n    <audio_text>[spk-1]</audio_text> \n</result>\n```\n\n# ！！！最终强制性检查！！！\n- **零容忍策略**: 你的响应**只能是XML内容**。绝对禁止包含任何XML之外的文本、解释或 ` ```xml ` 标记。\n- **强制计数与纠错**: 在你生成最终响应之前，你**必须执行一次计数检查**：你准备生成的 `<audio_text>` 标签数量，是否与我提供的音频文件数量**完全相等**？\n    - **如果计数不匹配**，这表示你严重违反了**【最高优先级】规则 #1**。你必须**【废弃】**当前的草稿并**【重新生成】**，确保严格遵守一对一映射。\n    - **只有在计数完全匹配的情况下，才允许输出。**\n", "localllm_api": "", "localllm_key": "", "localllm_model": "qwen:7b", "localllm_template": "", "localllm_max_token": "4096", "localllm_temperature": "0.7", "localllm_top_p": "1.0", "zhipu_key": "", "zhipu_model": "glm-4-flash", "zhipu_template": "", "guiji_key": "", "guiji_model": "Qwen/Qwen3-8B", "guiji_template": "", "deepseek_key": "", "deepseek_model": "deepseek-chat", "deepseek_template": "", "openrouter_key": "", "openrouter_model": "moonshotai/kimi-k2:free", "openrouter_template": "", "zijiehuoshan_key": "", "zijiehuoshan_model": "", "zijiehuoshan_template": "", "ai302_key": "", "ai302_model": "", "ai302_template": "", "trans_api_url": "", "trans_secret": "", "coquitts_role": "", "coquitts_key": "", "elevenlabstts_role": ["clone", "Aria", "Roger", "Sarah", "Laura", "Charlie", "George", "Callum", "River", "Liam", "Charlotte", "Alice", "Matilda", "Will", "Jessica", "Eric", "Chris", "Brian", "Daniel", "Lily", "Bill", "Coco Li"], "elevenlabstts_key": "", "elevenlabstts_models": "eleven_flash_v2_5", "openaitts_api": "", "openaitts_key": "", "openaitts_model": "tts-1", "openaitts_instructions": "", "openaitts_role": "alloy,ash,coral,echo,fable,onyx,nova,sage,shimmer,verse", "qwentts_key": "", "qwentts_model": "qwen-tts-latest", "qwentts_role": "Chelsie,Cherry,Serena,Ethan,Dylan,Jada,Sunny", "kokoro_api": "", "openairecognapi_url": "", "openairecognapi_key": "", "openairecognapi_prompt": "", "openairecognapi_model": "whisper-1", "parakeet_address": "", "clone_api": "", "clone_voicelist": ["clone"], "zh_recogn_api": "", "recognapi_url": "", "recognapi_key": "", "stt_url": "", "stt_model": "tiny", "sense_url": "", "ttsapi_url": "", "ttsapi_voice_role": "", "ttsapi_extra": "pyvideotrans", "ttsapi_language_boost": "auto", "ttsapi_emotion": "happy", "ai302tts_key": "", "ai302tts_model": "", "ai302tts_role": "alloy,ash,coral,echo,fable,onyx,nova,sage,shimmer,verse", "azure_speech_region": "", "azure_speech_key": "", "chatterbox_url": "", "chatterbox_role": "", "chatterbox_cfg_weight": 0.5, "chatterbox_exaggeration": 0.5, "gptsovits_url": "", "gptsovits_role": "", "gptsovits_isv2": true, "gptsovits_extra": "pyvideotrans", "cosyvoice_url": "", "cosyvoice_role": "", "fishtts_url": "", "fishtts_role": "", "f5tts_url": "", "f5tts_model": "", "f5tts_ttstype": "F5-TTS", "f5tts_role": "", "f5tts_is_whisper": false, "doubao_appid": "", "doubao_access": "", "volcenginetts_appid": "", "volcenginetts_access": "", "volcenginetts_cluster": "", "chattts_api": "", "app_mode": "tiqu", "stt_source_language": 0, "stt_recogn_type": 0, "stt_model_name": "large-v1", "stt_remove_noise": false, "deepgram_apikey": "", "deepgram_utt": 200, "trans_translate_type": 0, "trans_source_language": 0, "trans_target_language": 1, "trans_out_format": 0, "dubb_source_language": 0, "dubb_tts_type": 0, "dubb_role": 0, "dubb_out_format": 0, "dubb_voice_autorate": true, "dubb_hecheng_rate": 0, "dubb_pitch_rate": 0, "dubb_volume_rate": 0, "volume": "0%", "pitch": "0Hz", "back_audio": "", "clear_cache": false, "copysrt_rawvideo": false, "stt_out_format": "srt", "stt_copysrt_rawvideo": false}
